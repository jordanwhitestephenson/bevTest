{"ast":null,"code":"import _slicedToArray from \"/Users/jordanstephenson/Desktop/MeteorEx/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jordanstephenson/Desktop/MeteorEx/my-app/client/src/components/DrinkTable.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FilterList from './FilterList';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Button from '@material-ui/core/Button';\nimport EnhancedTableToolbar from './EnhancedTableToolbar';\nimport Drawer from '@material-ui/core/Drawer';\nimport { headRows } from '../constants/constants';\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nfunction EnhancedTableHead(props) {\n  var classes = props.classes,\n      onSelectAllClick = props.onSelectAllClick,\n      order = props.order,\n      orderBy = props.orderBy,\n      numSelected = props.numSelected,\n      rowCount = props.rowCount,\n      onRequestSort = props.onRequestSort;\n\n  var createSortHandler = function createSortHandler(property) {\n    return function (event) {\n      onRequestSort(event, property);\n    };\n  };\n\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), headRows.map(function (row) {\n    return React.createElement(TableCell, {\n      key: row.id,\n      align: row.numeric ? 'right' : 'left',\n      padding: row.disablePadding ? 'none' : 'default',\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: createSortHandler(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, row.label, orderBy === row.id ? React.createElement(\"span\", {\n      className: classes.visuallyHidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null));\n  })));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing(3)\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(2)\n    },\n    table: {\n      minWidth: 750\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    }\n  };\n});\nexport default function DrinkTable(_ref) {\n  var drinkData = _ref.drinkData;\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      rows = _React$useState2[0],\n      setRows = _React$useState2[1];\n\n  useEffect(function () {\n    setRows(drinkData);\n  });\n\n  var _React$useState3 = React.useState('asc'),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      order = _React$useState4[0],\n      setOrder = _React$useState4[1];\n\n  var _React$useState5 = React.useState('Description'),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      orderBy = _React$useState6[0],\n      setOrderBy = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      selected = _React$useState8[0],\n      setSelected = _React$useState8[1];\n\n  var _React$useState9 = React.useState(0),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      page = _React$useState10[0],\n      setPage = _React$useState10[1];\n\n  var _React$useState11 = React.useState(5),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      rowsPerPage = _React$useState12[0],\n      setRowsPerPage = _React$useState12[1];\n\n  function handleRequestSort(event, property) {\n    var isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      var newSelecteds = rows.map(function (n) {\n        return n.name;\n      });\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }\n\n  function handleClick(event, name) {\n    var selectedIndex = selected.indexOf(name);\n    var newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  var filterResult = function filterResult(tableHead, type) {\n    setRows(rows.filter(function (row) {\n      return row[tableHead] === type;\n    }));\n  };\n\n  var isSelected = function isSelected(name) {\n    return selected.indexOf(name) !== -1;\n  };\n\n  var emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    deleteArray: selected,\n    filterResult: filterResult,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: \"medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, stableSort(rows, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row, index) {\n    var isItemSelected = isSelected(row.ID);\n    var labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: function onClick(event) {\n        return handleClick(event, row.ID);\n      },\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.ID,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected // onChange = {addToSelected(row.ID)}\n      ,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, row.Description), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, row.Volume), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, row.Cost), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, row.Category), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, row.ID));\n  }), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/jordanstephenson/Desktop/MeteorEx/my-app/client/src/components/DrinkTable.js"],"names":["React","useEffect","PropTypes","clsx","FilterList","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","DeleteIcon","FilterListIcon","Button","EnhancedTableToolbar","Drawer","headRows","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","row","id","numeric","disablePadding","label","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useStyles","theme","root","width","marginTop","spacing","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","position","top","DrinkTable","drinkData","useState","rows","setRows","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","name","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","value","filterResult","tableHead","type","filter","isSelected","emptyRows","Math","min","isItemSelected","ID","labelId","Description","Volume","Cost","Category"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FilterList from './FilterList'\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Button from '@material-ui/core/Button';\nimport EnhancedTableToolbar from './EnhancedTableToolbar'\nimport Drawer from '@material-ui/core/Drawer';\nimport {headRows} from '../constants/constants'\n\n\nfunction desc( a, b, orderBy ) {\n  if ( b[orderBy] < a[orderBy] ) {\n    return -1;\n  }\n  if ( b[orderBy] > a[orderBy] ) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort( array, cmp ) {\n  const stabilizedThis = array.map( ( el, index ) => [el, index] );\n  stabilizedThis.sort( ( a, b ) => {\n    const order = cmp( a[0], b[0] );\n    if ( order !== 0 ) return order;\n    return a[1] - b[1];\n  } );\n  return stabilizedThis.map( el => el[0] );\n}\n\nfunction getSorting( order, orderBy ) {\n  return order === 'desc' ? ( a, b ) => desc( a, b, orderBy ) : ( a, b ) => -desc( a, b, orderBy );\n}\n\n\nfunction EnhancedTableHead( props ) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort( event, property );\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headRows.map( row => (\n          <TableCell\n            key={row.id}\n            align={row.numeric ? 'right' : 'left'}\n            padding={row.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === row.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === row.id}\n              direction={order}\n              onClick={createSortHandler( row.id )}\n            >\n              {row.label}\n              {orderBy === row.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ) )}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf( ['asc', 'desc'] ).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\n\n\n\n\nconst useStyles = makeStyles( theme => ( {\n  root: {\n    width: '100%',\n    marginTop: theme.spacing( 3 ),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing( 2 ),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n} ) );\n\nexport default function DrinkTable( { drinkData } ) {\n  const classes = useStyles();\n  const [rows, setRows] = React.useState([]);\n  useEffect( () => {\n    setRows(drinkData)\n  })\n  const [order, setOrder] = React.useState( 'asc' );\n  const [orderBy, setOrderBy] = React.useState( 'Description' );\n  const [selected, setSelected] = React.useState( [] );\n  const [page, setPage] = React.useState( 0 );\n\n  const [rowsPerPage, setRowsPerPage] = React.useState( 5 );\n\n  function handleRequestSort( event, property ) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder( isDesc ? 'asc' : 'desc' );\n    setOrderBy( property );\n  }\n\n  function handleSelectAllClick( event ) {\n    if ( event.target.checked ) {\n      const newSelecteds = rows.map( n => n.name );\n      setSelected( newSelecteds );\n      return;\n    }\n    setSelected( [] );\n  }\n\n  function handleClick( event, name ) {\n    const selectedIndex = selected.indexOf( name );\n    let newSelected = [];\n\n    if ( selectedIndex === -1 ) {\n      newSelected = newSelected.concat( selected, name );\n    } else if ( selectedIndex === 0 ) {\n      newSelected = newSelected.concat( selected.slice( 1 ) );\n    } else if ( selectedIndex === selected.length - 1 ) {\n      newSelected = newSelected.concat( selected.slice( 0, -1 ) );\n    } else if ( selectedIndex > 0 ) {\n      newSelected = newSelected.concat(\n        selected.slice( 0, selectedIndex ),\n        selected.slice( selectedIndex + 1 ),\n      );\n    }\n    setSelected( newSelected );\n  }\n\n  function handleChangePage( event, newPage ) {\n    setPage( newPage );\n  }\n\n  function handleChangeRowsPerPage( event ) {\n    setRowsPerPage( +event.target.value );\n    setPage( 0 );\n  }\n\n  const filterResult = ( tableHead, type ) => {\n    setRows(rows.filter(row => row[tableHead] === type))\n  }\n  const isSelected = name => selected.indexOf( name ) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min( rowsPerPage, rows.length - page * rowsPerPage );\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} deleteArray={selected} filterResult={filterResult} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={\"medium\"}\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort( rows, getSorting( order, orderBy ) )\n                .slice( page * rowsPerPage, page * rowsPerPage + rowsPerPage )\n                .map( ( row, index ) => {\n\n                  const isItemSelected = isSelected( row.ID );\n                  const labelId = `enhanced-table-checkbox-${ index }`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick( event, row.ID )}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.ID}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          // onChange = {addToSelected(row.ID)}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.Description}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.Volume}</TableCell>\n                      <TableCell align=\"right\">{row.Cost}</TableCell>\n                      <TableCell align=\"right\">{row.Category}</TableCell>\n                      <TableCell align=\"right\">{row.ID}</TableCell>\n                    </TableRow>\n                  );\n                } )}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}